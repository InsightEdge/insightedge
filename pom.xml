<?xml version="1.0" encoding="UTF-8"?>

<project>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.gigaspaces.insightedge</groupId>
    <artifactId>insightedge-package</artifactId>
    <version>16.2.0-m5-thu-3</version>
    <packaging>pom</packaging>
    <description>InsightEdge Package</description>

    <properties>
        <xap.version>16.2.0-m5-thu-3</xap.version>
        <spark.version>2.4.4</spark.version>
        <scala.version>2.11.12</scala.version>
        <scalatest.version>2.2.4</scalatest.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <zeppelin.version>0.8.2</zeppelin.version>
    </properties>

    <repositories>
        <repository>
            <id>org.openspaces</id>
            <url>http://maven-repository.openspaces.org</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>org.openspaces</id>
            <url>http://maven-repository.openspaces.org</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <snapshotRepository>
            <id>org.openspaces</id>
            <url>s3://gigaspaces-maven-repository-eu</url>
        </snapshotRepository>
        <repository>
            <id>org.openspaces</id>
            <url>s3://gigaspaces-maven-repository-eu</url>
        </repository>
    </distributionManagement>

    <modules>
        <module>insightedge-core</module>
        <module>insightedge-packager</module>
        <module>insightedge-integration-tests</module>
        <module>insightedge-cli</module>
        <module>insightedge-zeppelin</module>
        <module>insightedge-examples</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- our modules -->
            <dependency>
                <groupId>org.gigaspaces.insightedge</groupId>
                <artifactId>insightedge-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.gigaspaces.insightedge</groupId>
                <artifactId>insightedge-core</artifactId>
                <type>test-jar</type>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>

            <!-- GigaSpaces -->
            <dependency>
                <groupId>org.gigaspaces</groupId>
                <artifactId>xap-openspaces</artifactId>
                <version>${xap.version}</version>
            </dependency>
            <dependency>
                <groupId>org.gigaspaces</groupId>
                <artifactId>xap-spatial</artifactId>
                <version>${xap.version}</version>
            </dependency>
            <!-- Scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <!-- Spark -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_2.11</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <!-- make sure org.scala-lang:scalap:jar is not pulled in -->
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scalap</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-mllib_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <!-- Test dependencies -->
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_2.11</artifactId>
                <version>${scalatest.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-library</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>com.gigaspaces</groupId>
                <artifactId>xap-build-plugin</artifactId>
                <version>${xap.version}</version>
                <configuration>
                    <user>${user}</user>
                    <key>${key}</key>
                    <container>${container}</container>
                    <type />
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>

        <extensions>
            <extension>
                <groupId>org.kuali.maven.wagons</groupId>
                <artifactId>maven-s3-wagon</artifactId>
                <version>1.1.20</version>
            </extension>
        </extensions>

    </build>

</project>
